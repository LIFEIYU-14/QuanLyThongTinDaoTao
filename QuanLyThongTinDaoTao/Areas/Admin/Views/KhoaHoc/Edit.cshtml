@model QuanLyThongTinDaoTao.Models.KhoaHoc
@{
    ViewBag.Title = "Chỉnh Sửa Khóa Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";

    // Tìm avatar nếu có trong danh sách tệp đính kèm (dành cho hiển thị)
    var avatar = Model.KhoaHocAttachments?.FirstOrDefault(a => a.Attachment != null &&
        (a.Attachment.FileType.ToLower().EndsWith("jpg") || a.Attachment.FileType.ToLower().EndsWith("png") || a.Attachment.FileType.ToLower().EndsWith("jpeg")));

    var imagePath = !string.IsNullOrEmpty(Model.HinhDaiDienKhoaHoc)
        ? Url.Content(Model.HinhDaiDienKhoaHoc)
        : (avatar?.Attachment?.FilePath ?? Url.Content("~/Upload/KhoaHoc/HinhDaiDien/default.png"));
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-warning text-white text-center">
            <h3><i class="fa-solid fa-pen-to-square"></i> Chỉnh Sửa Khóa Học</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "KhoaHoc", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.KhoaHocId)
                <div class="col-md-12 mb-3">
                    <label class="form-label fw-semibold">Hình Ảnh Khóa Học</label>
                    <div class="text-center">
                        <img id="previewImage" src="@imagePath" alt="Hình khóa học" class="rounded border mb-2" style="max-width: 200px; height: auto;" />
                    </div>
                    <input type="file" name="hinhDaiDien" id="imageFile" class="form-control" accept="image/*" onchange="previewFile()" />
                </div>
                <div class="col-md-12 mb-3">
                    @Html.LabelFor(model => model.MaKhoaHoc, "Mã Khóa Học", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.MaKhoaHoc, new { @class = "form-control", @readonly = "readonly" })


                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <i class="fa-solid fa-book-open"></i>@Html.LabelFor(model => model.TenKhoaHoc, "Tên Khóa Học", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.TenKhoaHoc, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.TenKhoaHoc, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        <i class="fa-solid fa-clock"></i>
                        @Html.LabelFor(model => model.ThoiLuong, "Thời Lượng (tiết)", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.ThoiLuong, new { @class = "form-control", type = "number", min = "0" })
                    </div>
                </div>

                <div class="col-md-12 mb-3">
                    <i class="fa-solid fa-file-lines"></i>
                    @Html.LabelFor(model => model.MoTa, "Mô Tả", new { @class = "form-label" })
                    @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = 5, id = "MoTa" })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>



                <div class="col-md-12 mb-3">
                    <label class="form-label fw-semibold">Tệp Đính Kèm (jpg, png, pdf, docx, xlsx, txt)</label>
                    <input type="file" name="attachments" multiple class="form-control" accept=".jpg,.jpeg,.png,.pdf,.docx,.xlsx,.txt,.pptx" />

                    @if (Model.KhoaHocAttachments != null && Model.KhoaHocAttachments.Any())
                    {
                        <h4 class="mt-4 text-primary">Tệp Đính Kèm</h4>
                        <ul class="list-group">
                            @foreach (var attachment in Model.KhoaHocAttachments)
                            {
                                if (attachment.Attachment.AttachmentId == avatar?.Attachment.AttachmentId)
                                {
                                    continue;
                                }
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <a href="@Url.Content(attachment.Attachment.FilePath)" target="_blank">@attachment.Attachment.FileName</a>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="deleteAttachment('@attachment.Attachment.AttachmentId')">
                                        <i class="fas fa-trash-alt"></i> Xóa
                                    </button>
                                </li>
                            }
                        </ul>
                    }
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary me-2 btn-lg">
                        <i class="fa-solid fa-save"></i> Lưu Thay Đổi
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .ck-editor__editable {
        min-height: 150px;
        max-height: 600px;
        resize: vertical;
        overflow-y: auto;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        padding: 0.75rem;
        font-size: 1rem;
    }

    .btn-lg {
        padding: 0.5rem 1.5rem;
        font-size: 1.125rem;
    }

    .card-header {
        font-size: 1.5rem;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .row {
        margin-bottom: 1.5rem;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }
</style>

<script>
    function previewFile() {
        var preview = document.getElementById("previewImage");
        var file = document.getElementById("imageFile").files[0];
        var reader = new FileReader();

        reader.onloadend = function () {
            preview.src = reader.result;
        }

        if (file) {
            reader.readAsDataURL(file);
        }
    }

    function deleteAttachment(attachmentId) {
        if (confirm('Bạn có chắc chắn muốn xóa tệp này?')) {
            window.location.href = '/Admin/KhoaHoc/DeleteAttachment?attachmentId=' + attachmentId + '&khoaHocId=@Model.KhoaHocId';
        }
    }
    document.addEventListener('DOMContentLoaded', function () {
    ClassicEditor
        .create(document.querySelector('#MoTa'), {
            ckfinder: {
                uploadUrl: '@Url.Action("UploadImage", "KhoaHoc", new { area = "Admin" })',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            },
            toolbar: {
                items: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'imageUpload', 'blockQuote', 'undo', 'redo'
                ]
            },
            language: 'vi'
        })
        .then(editor => {
            window.editor = editor;
        })
        .catch(error => {
            console.error('CKEditor lỗi:', error);
        });
});
</script>
