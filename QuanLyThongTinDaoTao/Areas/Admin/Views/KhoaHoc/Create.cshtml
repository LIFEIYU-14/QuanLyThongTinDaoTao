@model QuanLyThongTinDaoTao.Models.KhoaHoc

@{
    ViewBag.Title = "Thêm Khóa Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h3><i class="fa-solid fa-book-open"></i> Thêm Khóa Học</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Create", "KhoaHoc", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <!-- Hình đại diện Khóa học -->
                <div class="mb-3 text-center">
                    <label class="form-label fw-semibold">Hình đại diện Khóa học</label>
                    <div>
                        <img id="previewImage" src="~/Upload/KhoaHoc/HinhDaiDien/default.png"
                             alt="Hình khóa học" class="rounded border mb-2" style="max-width: 200px; height: auto;" />
                    </div>
                    <input type="file" name="hinhDaiDien" id="imageFile" class="form-control" accept=".jpg,.jpeg,.png" onchange="previewFile()" />
                </div>

                <!-- Mã Khóa Học (readonly) -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.MaKhoaHoc,"Mã Khóa Học",new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.MaKhoaHoc, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MaKhoaHoc, "", new { @class = "text-danger" })
                </div>

                <!-- Tên Khóa Học -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.TenKhoaHoc, "Tên Khóa Học", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.TenKhoaHoc, new { @class = "form-control", placeholder = "Nhập tên khóa học" })
                    @Html.ValidationMessageFor(model => model.TenKhoaHoc, "", new { @class = "text-danger" })
                </div>

                <!-- Mô Tả Khóa Học -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.MoTa, "Mô Tả", new { @class = "form-label" })
                    @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = 5, id = "MoTa" })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>

                <!-- Thời Lượng -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.ThoiLuong, "Thời Lượng", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.ThoiLuong, new { @class = "form-control", type = "number", min = 1, placeholder = "Nhập thời lượng (giờ)" })
                    @Html.ValidationMessageFor(model => model.ThoiLuong, "", new { @class = "text-danger" })
                </div>

                <!-- Tệp Đính Kèm -->
                <div class="mb-3">
                    <label for="attachments" class="form-label">Tệp Đính Kèm (JPG, PNG, PDF, DOCX, TXT)</label>
                    <input type="file" name="attachments" id="attachments" class="form-control" multiple />
                </div>

                <!-- Nút Thêm và Quay Lại -->
                <div class="text-center">
                    <button type="submit" class="btn btn-success me-2 btn-lg">
                        <i class="fa-solid fa-circle-plus"></i> Thêm Khóa Học
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Tích hợp CKEditor 5 -->
<script>
     document.addEventListener('DOMContentLoaded', function () {
      ClassicEditor
          .create(document.querySelector('#MoTa'), {
              ckfinder: {
                  uploadUrl: '@Url.Action("UploadImage", "KhoaHoc", new { area = "Admin" })',
                  headers: {
                      'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                  }
              },
              toolbar: {
                  items: [
                      'heading', '|',
                      'bold', 'italic', 'link', '|',
                      'bulletedList', 'numberedList', '|',
                      'imageUpload', 'blockQuote', 'undo', 'redo'
                  ]
              },
              language: 'vi'
          })
          .then(editor => {
              window.editor = editor;
          })
          .catch(error => {
              console.error('CKEditor lỗi:', error);
          });
  });
    function previewFile() {
        var preview = document.getElementById("previewImage");
        var file = document.getElementById("imageFile").files[0];
        var reader = new FileReader();

        reader.onloadend = function () {
            preview.src = reader.result;
        }

        if (file) {
            reader.readAsDataURL(file);
        }
    }
</script>
<style>
    .form-label {
        font-weight: bold;
    }

    .form-control {
        padding: 0.75rem;
        font-size: 1rem;
    }

    .btn-lg {
        padding: 0.5rem 1.5rem;
        font-size: 1.125rem;
    }

    .card-header {
        font-size: 1.5rem;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .row {
        margin-bottom: 1.5rem;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }
</style>