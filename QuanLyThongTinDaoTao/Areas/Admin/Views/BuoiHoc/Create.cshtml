@model QuanLyThongTinDaoTao.Models.BuoiHoc

@{
    ViewBag.Title = "Thêm Buổi Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h3><i class="fa-solid fa-calendar-plus"></i> Thêm Buổi Học</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Create", "BuoiHoc", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    @Html.Label("LopHocId", "Lớp Học", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    <select class="form-control" name="LopHocId" required>
                        <option value="">-- Chọn Lớp Học --</option>
                        @foreach (var lopHoc in ViewBag.LopHocList)
                        {
                            <option value="@lopHoc.LopHocId">@lopHoc.TenLopHoc</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.NgayHoc, "Ngày Học", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.NgayHoc, new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.NgayHoc, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.GioBatDau, "Giờ Bắt Đầu", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.GioBatDau, new { @class = "form-control", type = "time" })
                        @Html.ValidationMessageFor(model => model.GioBatDau, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.GioKetThuc, "Giờ Kết Thúc", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.GioKetThuc, new { @class = "form-control", type = "time" })
                        @Html.ValidationMessageFor(model => model.GioKetThuc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.GhiChu, "Ghi Chú", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control", rows = 5, id = "GhiChu" })
                </div>
                <!-- Tệp Đính Kèm -->
                <div class="mb-3">
                    <label for="attachments" class="form-label">Tệp Đính Kèm (JPG, PNG, PDF, DOCX, TXT)</label>
                    <input type="file" name="attachments" id="attachments" class="form-control" multiple />
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="fa-solid fa-circle-plus"></i> Thêm Buổi Học
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .ck-editor__editable {
        min-height: 150px;
        max-height: 600px;
        resize: vertical;
        overflow-y: auto;
    }
</style>

<!-- Tích hợp CKEditor 5 -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        ClassicEditor
            .create(document.querySelector('#GhiChu'))
            .then(editor => {
                console.log('CKEditor đã khởi tạo thành công.');
                const editorElement = editor.ui.view.editable.element;
                editorElement.style.overflowY = 'auto';

                function adjustHeight() {
                    editorElement.style.height = 'auto';
                    editorElement.style.height = Math.min(editorElement.scrollHeight, 500) + 'px';
                }
                editor.model.document.on('change:data', adjustHeight);
                adjustHeight();
            })
            .catch(error => {
                console.error('Lỗi CKEditor:', error);
            });
    });
</script>
