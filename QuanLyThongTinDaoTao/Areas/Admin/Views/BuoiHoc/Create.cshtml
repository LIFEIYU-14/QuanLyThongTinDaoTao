@model QuanLyThongTinDaoTao.Models.BuoiHoc
@{
    ViewBag.Title = "Thêm Buổi Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h3><i class="fa-solid fa-calendar-plus"></i> Thêm Buổi Học</h3>
        </div> 
        <div class="card-body">
            @using (Html.BeginForm("Create", "BuoiHoc", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    @Html.Label("LopHocId", "Lớp Học", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    <select class="form-control" name="LopHocId" required>
                        <option value="" class="text-center">-- Chọn Lớp Học --</option>
                        @foreach (var lopHoc in ViewBag.LopHocList)
                        {
                            var ngayBatDau = lopHoc.NgayBatDau != null ? ((DateTime)lopHoc.NgayBatDau).ToString("dd/MM/yyyy") : "??";
                            var ngayKetThuc = lopHoc.NgayKetThuc != null ? ((DateTime)lopHoc.NgayKetThuc).ToString("dd/MM/yyyy") : "??";

                            <option value="@lopHoc.LopHocId">
                                @lopHoc.TenLopHoc - (@ngayBatDau - @ngayKetThuc)
                            </option>
                         
                        }
                    </select>
                </div>


                <div class="mb-3">
                    @Html.LabelFor(model => model.NgayHoc, "Ngày Học", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    @Html.TextBoxFor(model => model.NgayHoc, new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.NgayHoc, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.GioBatDau, "Giờ Bắt Đầu", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.GioBatDau, new { @class = "form-control", type = "time" })
                        @Html.ValidationMessageFor(model => model.GioBatDau, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.GioKetThuc, "Giờ Kết Thúc", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.GioKetThuc, new { @class = "form-control", type = "time" })
                        @Html.ValidationMessageFor(model => model.GioKetThuc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.GhiChu, "Ghi Chú", new { @class = "form-label" })
                    @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control", rows = 5, id = "GhiChu" })
                </div>
                <div class="col-md-12 mb-3">
                    <label class="form-label">Chọn Giảng Viên</label>
                  
                    <div id="giangVienContainer" class="border rounded p-2" style="max-height: 300px; overflow-y: auto;">
                        <!-- Sẽ được cập nhật bằng JS -->
                    </div>
                </div>
                <!-- Tệp Đính Kèm -->
                <div class="mb-3">
                    <label for="attachments" class="form-label">Tệp Đính Kèm (JPG, PNG, PDF, DOCX, TXT)</label>
                    <input type="file" name="attachments" id="attachments" class="form-control" multiple />
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="fa-solid fa-circle-plus"></i> Thêm Buổi Học
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .ck-editor__editable {
        min-height: 150px;
        max-height: 600px;
        resize: vertical;
        overflow-y: auto;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        padding: 0.75rem;
        font-size: 1rem;
    }

    .btn-lg {
        padding: 0.5rem 1.5rem;
        font-size: 1.125rem;
    }

    .card-header {
        font-size: 1.5rem;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .row {
        margin-bottom: 1.5rem;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }
</style>

<!-- Tích hợp CKEditor 5 -->
<script>
        document.addEventListener('DOMContentLoaded', function () {
    ClassicEditor
        .create(document.querySelector('#GhiChu'), {
            ckfinder: {
                uploadUrl: '@Url.Action("UploadImage", "BuoiHoc", new { area = "Admin" })',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            },
            toolbar: {
                items: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'imageUpload', 'blockQuote', 'undo', 'redo'
                ]
            },
            language: 'vi'
        })
        .then(editor => {
            window.editor = editor;
        })
        .catch(error => {
            console.error('CKEditor lỗi:', error);
        });
});
    document.getElementById('submitBtn').addEventListener('click', function () {
        this.disabled = true;  // Disable the submit button
        this.innerHTML = '<i class="fa-solid fa-circle-plus"></i> Đang Xử Lý...';  // Optionally change button text
    });
    function fetchAvailableGiangViens() {
        const ngayHoc = document.querySelector('[name="NgayHoc"]').value;
        const gioBatDau = document.querySelector('[name="GioBatDau"]').value;
        const gioKetThuc = document.querySelector('[name="GioKetThuc"]').value;

        if (!ngayHoc || !gioBatDau || !gioKetThuc) return;

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAvailableGiangViens", "BuoiHoc")',
            data: {
                ngayHoc: ngayHoc,
                gioBatDau: gioBatDau,
                gioKetThuc: gioKetThuc
            },
            success: function (data) {
                const container = $('#giangVienContainer');
                container.empty();

                data.forEach(gv => {
                    let html = '';
                    const isChecked = gv.IsSelected ? 'checked' : '';

                    // Nếu bận nhưng đã được chọn trước => hiển thị và giữ checked
                    if (gv.IsBusy && gv.IsSelected) {
                        html = `
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="selectedGiangViens" value="${gv.NguoiDungId}" id="gv_${gv.NguoiDungId}" ${isChecked} />
                    <label class="form-check-label text-warning" for="gv_${gv.NguoiDungId}">${gv.HoVaTen} (bận - đã chọn)</label>
                </div>`;
                    }
                    // Nếu bận và chưa được chọn => disable
                    else if (gv.IsBusy && !gv.IsSelected) {
                        html = `
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" disabled />
                    <label class="form-check-label text-muted">${gv.HoVaTen} (bận)</label>
                </div>`;
                    }
                    // Bình thường
                    else {
                        html = `
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="selectedGiangViens" value="${gv.NguoiDungId}" id="gv_${gv.NguoiDungId}" ${isChecked} />
                    <label class="form-check-label" for="gv_${gv.NguoiDungId}">${gv.HoVaTen}</label>
                </div>`;
                    }

                    container.append(html);
                });
            },
            error: function (err) {
                console.error("Lỗi khi tải danh sách giảng viên:", err);
            }
        });
    }

    document.querySelector('[name="NgayHoc"]').addEventListener('change', fetchAvailableGiangViens);
    document.querySelector('[name="GioBatDau"]').addEventListener('change', fetchAvailableGiangViens);
    document.querySelector('[name="GioKetThuc"]').addEventListener('change', fetchAvailableGiangViens);

    // Nếu cần load sẵn ban đầu (ví dụ khi chỉnh sửa), gọi luôn
     fetchAvailableGiangViens();
</script>
