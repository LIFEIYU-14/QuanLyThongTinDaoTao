@model QuanLyThongTinDaoTao.Models.BuoiHoc

@{
    ViewBag.Title = "Chỉnh Sửa Buổi Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}


<div class="container py-4">
    <h3 class="fw-bold mb-3"><i class="fa-solid fa-calendar-day"></i> Chỉnh Sửa Buổi Học</h3>

    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb bg-warning bg-opacity-25 px-3 py-2 rounded">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "HomeAdmin")">Trang chủ</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "BuoiHoc")">Buổi học</a></li>
            <li class="breadcrumb-item active" aria-current="page">Chỉnh sửa</li>
        </ol>
    </nav>

    <div class="card shadow-sm">
        <div class="card-header bg-warning text-white">
            <h5 class="mb-0"><i class="fa-solid fa-pen-to-square"></i> Thông Tin Buổi Học</h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "BuoiHoc", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.BuoiHocId)

                <div class="mb-3">
                    @Html.Label("LopHocId", "Lớp Học", new { @class = "form-label fw-semibold" })
                    <select class="form-control" name="LopHocId" required>
                        <option value="">-- Chọn Lớp Học --</option>
                        @foreach (var lopHoc in ViewBag.LopHocList)
                        {
                            var start = lopHoc.NgayBatDau?.ToString("dd/MM/yyyy") ?? "??";
                            var end = lopHoc.NgayKetThuc?.ToString("dd/MM/yyyy") ?? "??";
                            <option value="@lopHoc.LopHocId" @(lopHoc.LopHocId == Model.LopHocId ? "selected" : "")>
                                @lopHoc.TenLopHoc (@start - @end)
                            </option>
                        }
                    </select>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.NgayHoc, "Ngày Học", new { @class = "form-label fw-semibold" })
                        @Html.TextBoxFor(model => model.NgayHoc, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                        @Html.ValidationMessageFor(model => model.NgayHoc, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.GioBatDau, "Giờ Bắt Đầu", new { @class = "form-label fw-semibold" })
                        @Html.TextBoxFor(model => model.GioBatDau, new { @class = "form-control", type = "time", required = "required" })
                        @Html.ValidationMessageFor(model => model.GioBatDau, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.GioKetThuc, "Giờ Kết Thúc", new { @class = "form-label fw-semibold" })
                        @Html.TextBoxFor(model => model.GioKetThuc, new { @class = "form-control", type = "time", required = "required" })
                        @Html.ValidationMessageFor(model => model.GioKetThuc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-semibold">Chọn Giảng Viên</label>
                    <input type="text" class="form-control mb-2" placeholder="Tìm giảng viên..." id="searchGiangVien" />
                    <div id="giangVienContainer" class="border rounded p-2" style="max-height: 300px; overflow-y: auto;">
                        <!-- Chèn danh sách giảng viên động ở đây -->
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label fw-semibold">Tệp Đính Kèm (jpg, png, pdf, docx, xlsx, txt)</label>
                    <input type="file" name="attachments" multiple class="form-control" accept=".jpg,.jpeg,.png,.pdf,.docx,.xlsx,.txt,.pptx" />

                    @if (Model.BuoiHocAttachments != null && Model.BuoiHocAttachments.Any())
                    {
                        var fileGroups = Model.BuoiHocAttachments.GroupBy(a => a.Attachment.FileType?.ToLower()).ToList();
                        <div class="accordion mt-3" id="accordionFiles">
                            @{
                                int index = 0;
                                foreach (var group in fileGroups)
                                {
                                    var ext = group.Key.ToUpper();
                                    var collapseId = $"collapse{index}";
                                    var headingId = $"heading{index}";
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="@headingId">
                                            <button class="accordion-button collapsed" type="button"
                                                    data-bs-toggle="collapse" data-bs-target="#@collapseId"
                                                    aria-expanded="false" aria-controls="@collapseId">
                                                📁 @ext
                                            </button>
                                        </h2>
                                        <div id="@collapseId" class="accordion-collapse collapse"
                                             aria-labelledby="@headingId" data-bs-parent="#accordionFiles">
                                            <div class="accordion-body">
                                                <div class="row">
                                                    @foreach (var attachment in group)
                                                    {
                                                        var filePath = Url.Content(attachment.Attachment.FilePath);
                                                        var fileName = attachment.Attachment.FileName;

                                                        if (ext == "JPG" || ext == "PNG" || ext == "JPEG")
                                                        {
                                                            <div class="col-md-3 mb-3">
                                                                <div class="card h-100">
                                                                    <img src="@filePath" class="card-img-top img-fluid" alt="@fileName" />
                                                                    <div class="card-body text-center p-2">
                                                                        <a href="@filePath" target="_blank" class="btn btn-sm btn-outline-primary">Xem ảnh</a>
                                                                        <button type="button" class="btn btn-sm btn-danger" onclick="deleteAttachment('@attachment.Attachment.AttachmentId')">
                                                                            <i class="fas fa-trash-alt"></i> Xóa
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="col-md-12 mb-2">
                                                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                                                    <div class="text-truncate" style="max-width: 70%;">
                                                                        <i class="fas fa-file me-2"></i>
                                                                        <a href="@filePath" target="_blank">@fileName</a>
                                                                    </div>
                                                                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteAttachment('@attachment.Attachment.AttachmentId')">
                                                                        <i class="fas fa-trash-alt"></i> Xóa
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    index++;
                                }
                            }
                        </div>
                        <a href="@Url.Action("DeleteAllAttachments", new { buoiHocId = Model.BuoiHocId })"
                           class="btn btn-danger mt-3"
                           onclick="return confirm('Bạn có chắc chắn muốn xóa tất cả tài liệu?');">
                            <i class="fa fa-trash"></i> Xóa tất cả tài liệu
                        </a>
                    }
                    else
                    {
                        <div class="alert alert-info mt-3">Không có tài liệu đính kèm</div>
                    }
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.GhiChu, "Ghi Chú", new { @class = "form-label fw-semibold" })
                    @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control", rows = 5, id = "GhiChu" })
                </div>

                <div class="text-end mt-4">
                    <button type="submit" class="btn btn-warning btn-lg">
                        <i class="fa-solid fa-save"></i> Lưu Thay Đổi
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg ms-2">
                        <i class="fas fa-arrow-left"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>


<style>
    .ck-editor__editable {
        min-height: 150px;
        max-height: 600px;
        resize: vertical;
        overflow-y: auto;
    }

</style>

<!-- Tích hợp CKEditor 5 -->
<script>
      function deleteAttachment(attachmentId) {
      if (confirm('Bạn có chắc chắn muốn xóa tệp này?')) {
          window.location.href = '/Admin/BuoiHoc/DeleteAttachment?attachmentId=' + attachmentId + '&buoiHocId=@Model.BuoiHocId';
      }
  }
    document.addEventListener('DOMContentLoaded', function () {
    ClassicEditor
        .create(document.querySelector('#GhiChu'), {
            ckfinder: {
                uploadUrl: '@Url.Action("UploadImage", "BuoiHoc", new { area = "Admin" })',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            },
            toolbar: {
                items: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'imageUpload', 'blockQuote', 'undo', 'redo'
                ]
            },
            language: 'vi'
        })
        .then(editor => {
            window.editor = editor;
        })
        .catch(error => {
            console.error('CKEditor lỗi:', error);
        });
});
   function fetchAvailableGiangViens() {
        const ngayHoc = document.querySelector('[name="NgayHoc"]').value;
        const gioBatDau = document.querySelector('[name="GioBatDau"]').value;
        const gioKetThuc = document.querySelector('[name="GioKetThuc"]').value;
        const buoiHocId = document.querySelector('[name="BuoiHocId"]').value;

        if (!ngayHoc || !gioBatDau || !gioKetThuc) return;

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAvailableGiangViens", "BuoiHoc")',
            data: {
                ngayHoc: ngayHoc,
                gioBatDau: gioBatDau,
                gioKetThuc: gioKetThuc,
                buoiHocId: buoiHocId
            },
            success: function (data) {
                const container = $('#giangVienContainer');
                container.empty();

                data.forEach(gv => {
                    const isChecked = gv.IsSelected === true || gv.IsSelected === "True" ? 'checked' : '';
                    let html = '';

                    if (gv.IsBusy && gv.IsSelected) {
                        html = `
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="selectedGiangViens" value="${gv.GiangVienId}" id="gv_${gv.GiangVienId}" ${isChecked} />
                                <label class="form-check-label text-warning" for="gv_${gv.GiangVienId}">${gv.HoVaTen} (bận - đã chọn)</label>
                            </div>`;
                                    } else if (gv.IsBusy) {
                                        html = `
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" disabled />
                                <label class="form-check-label text-muted">${gv.HoVaTen} (bận)</label>
                            </div>`;
                                    } else {
                                        html = `
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="selectedGiangViens" value="${gv.GiangVienId}" id="gv_${gv.GiangVienId}" ${isChecked} />
                                <label class="form-check-label" for="gv_${gv.GiangVienId}">${gv.HoVaTen}</label>
                            </div>`;
                    }

                    container.append(html);
                });

            },
            error: function (err) {
                console.error("Lỗi khi tải danh sách giảng viên:", err);
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelector('[name="NgayHoc"]').addEventListener('change', fetchAvailableGiangViens);
        document.querySelector('[name="GioBatDau"]').addEventListener('change', fetchAvailableGiangViens);
        document.querySelector('[name="GioKetThuc"]').addEventListener('change', fetchAvailableGiangViens);

        // Gọi khi trang load
        fetchAvailableGiangViens();
    });
    document.getElementById("searchGiangVien").addEventListener("keyup", function () {
        const keyword = this.value.toLowerCase();
        $("#giangVienContainer .form-check").each(function () {
            const text = $(this).text().toLowerCase();
            $(this).toggle(text.includes(keyword));
        });
    });
</script>
