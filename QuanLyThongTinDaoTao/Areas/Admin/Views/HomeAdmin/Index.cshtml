@{
    ViewBag.Title = "Trang tổng quan";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container-xxl py-5">
    <div class="bg-light rounded p-4 shadow-sm">
        <div class="text-center mb-5">
            <h3 class="mb-0"><i class="fas fa-chart-line"></i> TRANG TỔNG QUAN HỆ THỐNG</h3>
        </div>

        <!-- Dropdown lọc -->
        <div class="card-header d-flex flex-wrap align-items-center justify-content-center gap-2 mb-4">
            @Html.DropDownList("khoaHocId", ViewBag.KhoaHocList as SelectList ?? new SelectList(Enumerable.Empty<SelectListItem>()), "-- Chọn Khóa học --", new { @class = "form-select w-25", id = "khoaHocSelect" })

            @Html.DropDownList("lopHocId", ViewBag.LopHocList as SelectList ?? new SelectList(Enumerable.Empty<SelectListItem>()), "-- Chọn Lớp học --", new { @class = "form-select w-25", id = "lopHocSelect" })

            <!-- Ngày bắt đầu -->
            <input type="date" id="startDate" class="form-control w-auto" />

            <!-- Ngày kết thúc -->
            <input type="date" id="endDate" class="form-control w-auto" />

            <!-- Nút lọc -->
            <button class="btn btn-primary" id="filterButton">Lọc</button>
        </div>

        <!-- Thống kê tổng quan -->
        <div class="row text-center mb-4">
            <div class="col-md-2 col-6 mb-3">
                <div class="card shadow p-3">
                    <h6>Khóa học</h6>
                    <h4 class="text-info">@ViewBag.TotalCourses</h4>
                </div>
            </div>
            <div class="col-md-2 col-6 mb-3">
                <div class="card shadow p-3">
                    <h6>Lớp học</h6>
                    <h4 class="text-warning">@ViewBag.TotalClasses</h4>
                </div>
            </div>
            <div class="col-md-2 col-6 mb-3">
                <div class="card shadow p-3">
                    <h6>Học viên</h6>
                    <h4 class="text-success">@ViewBag.TotalStudents</h4>
                </div>
            </div>
            <div class="col-md-2 col-6 mb-3">
                <div class="card shadow p-3">
                    <h6>Giảng viên</h6>
                    <h4 class="text-danger">@ViewBag.TotalTeachers</h4>
                </div>
            </div>
            <div class="col-md-2 col-6 mb-3">
                <div class="card shadow p-3">
                    <h6>Hôm nay</h6>
                    <h4 class="text-primary">@ViewBag.RegistrationsToday</h4>
                </div>
            </div>
            <div class="col-md-2 col-6 mb-3">
                <div class="card shadow p-3">
                    <h6>Trong tháng</h6>
                    <h4 class="text-secondary">@ViewBag.RegistrationsThisMonth</h4>
                </div>
            </div>
        </div>

        <!-- Biểu đồ -->
        <div class="row">
            <div class="col-md-8 mb-4">
                <div class="card shadow p-3">
                    <h5 class="text-center">Thống kê đăng ký theo tháng</h5>
                    <canvas id="barChart"></canvas>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="card shadow p-3">
                    <h5 class="text-center">Thống kê lớp học theo trạng thái</h5>
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js + Script xử lý -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    const barCtx = document.getElementById('barChart').getContext('2d');
    const pieCtx = document.getElementById('pieChart').getContext('2d');

    const barChart = new Chart(barCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(ViewBag.MonthLabels),
            datasets: [{
                label: 'Lượt đăng ký',
                data: @Html.Raw(ViewBag.MonthData),
                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    const pieChart = new Chart(pieCtx, {
        type: 'pie',
        data: {
            labels: @Html.Raw(ViewBag.StatusLabels),
            datasets: [{
                data: @Html.Raw(ViewBag.StatusData),
                backgroundColor: ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' }
            }
        }
    });

    function updateBarChart(labels, data) {
        barChart.data.labels = labels;
        barChart.data.datasets[0].data = data;
        barChart.update();
    }

    $('#khoaHocSelect').change(function () {
        const khoaHocId = $(this).val();
        $('#lopHocSelect').empty().append('<option value="">-- Đang tải --</option>');

        $.getJSON('@Url.Action("GetLopHocByKhoaHoc", "HomeAdmin", new { area = "Admin" })', { khoaHocId }, function (data) {
            $('#lopHocSelect').empty().append('<option value="">-- Chọn Lớp học --</option>');
            $.each(data, function (i, item) {
                $('#lopHocSelect').append($('<option>', {
                    value: item.LopHocId,
                    text: item.TenLopHoc
                }));
            });
        });

        // Tự động gọi lại thống kê khi đổi khóa học (reset lớp học)
        $.getJSON('@Url.Action("GetRegistrationStats", "HomeAdmin", new { area = "Admin" })', { khoaHocId, lopHocId: null }, function (res) {
            updateBarChart(res.labels, res.data);
        });
    });

    $('#lopHocSelect').change(function () {
        const khoaHocId = $('#khoaHocSelect').val();
        const lopHocId = $(this).val();

        $.getJSON('@Url.Action("GetRegistrationStats", "HomeAdmin", new { area = "Admin" })', { khoaHocId, lopHocId }, function (res) {
            updateBarChart(res.labels, res.data);
        });
    });

    $('#filterButton').click(function () {
        const khoaHocId = $('#khoaHocSelect').val();
        const lopHocId = $('#lopHocSelect').val();
        const startDate = $('#startDate').val();
        const endDate = $('#endDate').val();

        console.log('Filter params:', { khoaHocId, lopHocId, startDate, endDate });

        $.getJSON('@Url.Action("GetRegistrationStats", "HomeAdmin", new { area = "Admin" })', {
            khoaHocId,
            lopHocId,
            startDate,
            endDate
        }, function (res) {
            updateBarChart(res.labels, res.data);
        });

    });
</script>
