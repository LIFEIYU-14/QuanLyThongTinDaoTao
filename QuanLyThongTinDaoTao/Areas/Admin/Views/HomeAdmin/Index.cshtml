@{
    ViewBag.Title = "Trang tổng quan";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container-xxl py-5">
    <div class="bg-light rounded p-4 shadow-sm">
        <div class="text-center mb-5">
            <h3 class="mb-0"><i class="fas fa-chart-line"></i> TRANG TỔNG QUAN HỆ THỐNG</h3>
        </div>

        <div class="card-header d-flex flex-wrap align-items-center justify-content-center gap-2 mb-4">
            @Html.DropDownList("khoaHocId", ViewBag.KhoaHocList as SelectList ?? new SelectList(Enumerable.Empty<SelectListItem>()), "-- Tất cả Khóa học --", new { @class = "form-select w-25", id = "khoaHocSelect" })
            @Html.DropDownList("lopHocId", ViewBag.LopHocList as SelectList ?? new SelectList(Enumerable.Empty<SelectListItem>()), "-- Tất cả Lớp học --", new { @class = "form-select w-25", id = "lopHocSelect" })
        </div>

        <div class="row text-center mb-4">
            <div class="col-md-2 col-6 mb-3"><div class="card shadow p-3"><h6>Khóa học</h6><h4 class="text-info">@ViewBag.TotalCourses</h4></div></div>
            <div class="col-md-2 col-6 mb-3"><div class="card shadow p-3"><h6>Lớp học</h6><h4 class="text-warning">@ViewBag.TotalClasses</h4></div></div>
            <div class="col-md-2 col-6 mb-3"><div class="card shadow p-3"><h6>Học viên</h6><h4 class="text-success">@ViewBag.TotalStudents</h4></div></div>
            <div class="col-md-2 col-6 mb-3"><div class="card shadow p-3"><h6>Giảng viên</h6><h4 class="text-danger">@ViewBag.TotalTeachers</h4></div></div>
            <div class="col-md-2 col-6 mb-3"><div class="card shadow p-3"><h6>Hôm nay</h6><h4 class="text-primary">@ViewBag.RegistrationsToday</h4></div></div>
            <div class="col-md-2 col-6 mb-3"><div class="card shadow p-3"><h6>Trong tháng</h6><h4 class="text-secondary">@ViewBag.RegistrationsThisMonth</h4></div></div>
        </div>

        <div class="row">
            <div class="col-md-8 mb-4">
                <div class="card shadow p-3">
                    <h5 class="text-center">Thống kê đăng ký theo tháng & Tỷ lệ điểm danh</h5>
                    <canvas id="barChart"></canvas>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="card shadow p-3">
                    <h5 class="text-center">Tỷ lệ điểm danh trung bình</h5> <!-- Sửa tiêu đề -->
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    const barCtx = document.getElementById('barChart').getContext('2d');
    const pieCtx = document.getElementById('pieChart').getContext('2d');

    let barChart = new Chart(barCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(ViewBag.MonthLabels),
            datasets: [
                {
                    label: 'Lượt đăng ký',
                    data: @Html.Raw(ViewBag.MonthData),
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    yAxisID: 'y'
                },
                {
                    label: 'Điểm danh HV (số lượt)',
                    data: [], // sẽ cập nhật sau
                    backgroundColor: 'rgba(40, 167, 69, 0.7)',
                    yAxisID: 'y'
                },
                {
                    label: 'Điểm danh GV (số lượt)',
                    data: [], // sẽ cập nhật sau
                    backgroundColor: 'rgba(220, 53, 69, 0.7)',
                    yAxisID: 'y'
                }
            ]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Số lượt'
                    }
                }
            }
        }
    });

    // Biến global để lưu giá trị gốc cho tooltip pieChart
    let rawPieValues = [];

    // ... (phần bar chart giữ nguyên) ...

    // Khởi tạo pie chart chỉ với 2 phần tử
    let pieChart = new Chart(pieCtx, {
        type: 'pie',
        data: {
            labels: ['Điểm danh HV', 'Điểm danh GV'],
            datasets: [{
                data: [], // sẽ cập nhật sau
                backgroundColor: ['#28a745', '#dc3545'] // xanh lá & đỏ
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom'
                },
                tooltip: {
                    callbacks: {
                        label: function (context) {
                            let label = context.label || '';
                            let value = context.parsed || 0;
                            return `${label}: ${value.toFixed(2)}%`;
                        }
                    }
                }
            }
        }
    });


    function updateCharts(months, registrationData, attendanceStats) {
        // ... (phần bar chart giữ nguyên) ...

        // Tính trung bình % điểm danh HV, GV
        let avgTiLeHV = attendanceStats.tiLeDiemDanhHV.length > 0
            ? attendanceStats.tiLeDiemDanhHV.reduce((a, b) => a + b, 0) / attendanceStats.tiLeDiemDanhHV.length
            : 0;

        let avgTiLeGV = attendanceStats.tiLeDiemDanhGV.length > 0
            ? attendanceStats.tiLeDiemDanhGV.reduce((a, b) => a + b, 0) / attendanceStats.tiLeDiemDanhGV.length
            : 0;

        // Cập nhật dữ liệu biểu đồ tròn
        let rawPieValues = [avgTiLeHV, avgTiLeGV];
        let total = rawPieValues.reduce((a, b) => a + b, 0);
        let normalizedValues = total > 0 ? rawPieValues.map(v => (v / total) * 100) : [0, 0];

        pieChart.data.datasets[0].data = normalizedValues;
        pieChart.update();

    }



    function updateCharts(months, registrationData, attendanceStats) {
        // Cập nhật bar chart với số đếm điểm danh HV, GV
        barChart.data.labels = months;
        barChart.data.datasets[0].data = registrationData;
        barChart.data.datasets[1].data = attendanceStats.soLuongDiemDanhHV;
        barChart.data.datasets[2].data = attendanceStats.soLuongDiemDanhGV;
        barChart.update();

        // Tính trung bình % điểm danh HV, GV
        let avgTiLeHV = attendanceStats.tiLeDiemDanhHV.length > 0
            ? attendanceStats.tiLeDiemDanhHV.reduce((a, b) => a + b, 0) / attendanceStats.tiLeDiemDanhHV.length
            : 0;
        let avgTiLeGV = attendanceStats.tiLeDiemDanhGV.length > 0
            ? attendanceStats.tiLeDiemDanhGV.reduce((a, b) => a + b, 0) / attendanceStats.tiLeDiemDanhGV.length
            : 0;

        // ✅ Chỉ dùng 2 phần tử cho biểu đồ tròn
        rawPieValues = [avgTiLeHV, avgTiLeGV];

        let total = rawPieValues.reduce((a, b) => a + b, 0);
        let normalizedValues = total > 0 ? rawPieValues.map(v => (v / total) * 100) : [0, 0];

        pieChart.data.datasets[0].data = normalizedValues;
        pieChart.update();
    }


    function loadStats(khoaHocId, lopHocId) {
        const khId = khoaHocId || null;
        const lhId = lopHocId || null;

        $.when(
            $.post('@Url.Action("GetRegistrationStats", "HomeAdmin", new { area = "Admin" })', { khoaHocId: khId, lopHocId: lhId }),
            $.post('@Url.Action("GetAttendanceStats", "HomeAdmin", new { area = "Admin" })', { khoaHocId: khId, lopHocId: lhId })
        ).done(function (res1, res2) {
            const registration = res1[0];
            const attendance = res2[0];
            updateCharts(registration.labels, registration.data, attendance);
        });
    }

    $('#khoaHocSelect').change(function () {
        const khoaHocId = $(this).val();
        $('#lopHocSelect').html('<option value="">-- Đang tải --</option>');

        if (khoaHocId) {
            $.getJSON('@Url.Action("GetLopHocByKhoaHoc", "HomeAdmin", new { area = "Admin" })', { khoaHocId }, function (data) {
                let options = '<option value="">-- Tất cả Lớp học --</option>';
                $.each(data, function (i, item) {
                    options += `<option value="${item.LopHocId}">${item.TenLopHoc}</option>`;
                });
                $('#lopHocSelect').html(options);
            });
        } else {
            $('#lopHocSelect').html('<option value="">-- Tất cả Lớp học --</option>');
        }

        loadStats(khoaHocId, null);
    });

    $('#lopHocSelect').change(function () {
        const khoaHocId = $('#khoaHocSelect').val();
        const lopHocId = $(this).val();
        loadStats(khoaHocId, lopHocId);
    });

    $(document).ready(function () {
        loadStats(null, null);
    });
</script>
