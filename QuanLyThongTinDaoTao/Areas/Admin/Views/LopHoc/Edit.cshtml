@model QuanLyThongTinDaoTao.Models.LopHoc

@{
    ViewBag.Title = "Chỉnh Sửa Lớp Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-warning text-white text-center">
            <h3><i class="fa-solid fa-pen-to-square"></i> Chỉnh Sửa Lớp Học</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "LopHoc", FormMethod.Post, new { enctype = "multipart/form-data", id = "editForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.LopHocId)

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.MaLopHoc, "Mã Lớp Học", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.MaLopHoc, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.MaLopHoc, "", new { @class = "text-danger", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.Label("KhoaHocId", "Khóa Học", new { @class = "form-label" })
                        <select class="form-control" name="KhoaHocId" required>
                            <option value="">-- Chọn Khóa Học --</option>
                            @foreach (var khoaHoc in ViewBag.KhoaHocList)
                            {
                                <option value="@khoaHoc.KhoaHocId"
                                        @(Model.KhoaHoc != null && Model.KhoaHoc.KhoaHocId == khoaHoc.KhoaHocId ? "selected" : "")>
                                    @khoaHoc.TenKhoaHoc
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.TenLopHoc, "Tên Lớp Học", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.TenLopHoc, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.TenLopHoc, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.SoTinChi, "Số Tín Chỉ", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.SoTinChi, new { @class = "form-control", type = "number", min = 1, required = "required" })
                        @Html.ValidationMessageFor(model => model.SoTinChi, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.NgayBatDau, "Ngày Bắt Đầu", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.NgayBatDau, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                        @Html.ValidationMessageFor(model => model.NgayBatDau, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.NgayKetThuc, "Ngày Kết Thúc", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.NgayKetThuc, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                        @Html.ValidationMessageFor(model => model.NgayKetThuc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.SoLuongToiDa, "Số lượng tối đa", new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.SoLuongToiDa, new { @class = "form-control", type = "number", min = 1, required = "required" })
                        @Html.ValidationMessageFor(model => model.SoLuongToiDa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.MoTa, "Mô Tả", new { @class = "form-label" })
                    @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = 5, id = "MoTa" })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>





                <div class="col-md-12 mb-3">
                    <label class="form-label fw-semibold">Tệp Đính Kèm (jpg, png, pdf, docx, xlsx, txt)</label>
                    <input type="file" name="attachments" multiple class="form-control" accept=".jpg,.jpeg,.png,.pdf,.docx,.xlsx,.txt,.pptx" />

                    @if (Model.LopHocAttachments != null && Model.LopHocAttachments.Any())
                    {
                        var fileGroups = Model.LopHocAttachments
                            .GroupBy(a => a.Attachment.FileType?.ToLower())
                            .ToList();

                        <div class="accordion" id="accordionFiles">
                            @{
                                int index = 0;
                                foreach (var group in fileGroups)
                                {
                                    var fileType = group.Key.ToUpper();
                                    var collapseId = $"collapse{index}";
                                    var headingId = $"heading{index}";
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="@headingId">
                                            <button class="accordion-button collapsed" type="button"
                                                    data-bs-toggle="collapse" data-bs-target="#@collapseId"
                                                    aria-expanded="false" aria-controls="@collapseId">
                                                📁 @fileType
                                            </button>
                                        </h2>
                                        <div id="@collapseId" class="accordion-collapse collapse"
                                             aria-labelledby="@headingId" data-bs-parent="#accordionFiles">
                                            <div class="accordion-body">
                                                <div class="row">
                                                    @foreach (var attachment in group)
                                                    {
                                                        var filePath = Url.Content(attachment.Attachment.FilePath);
                                                        var fileName = attachment.Attachment.FileName;
                                                        var ext = group.Key;

                                                        if (ext == "jpg" || ext == "png" || ext == "jpeg")
                                                        {
                                                            <div class="col-md-3 mb-3">
                                                                <div class="card h-100">
                                                                    <img src="@filePath" class="card-img-top img-fluid" alt="@fileName" />
                                                                    <div class="card-body p-2 text-center">
                                                                        <a href="@filePath" target="_blank" class="btn btn-sm btn-outline-primary">Xem ảnh</a>
                                                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteAttachment('@attachment.Attachment.AttachmentId')">
                                                                            <i class="fas fa-trash-alt"></i> Xóa
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        }
                                                        else
                                                        {
                                                            <div class="col-md-12 mb-2">
                                                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                                                    <div class="text-truncate" style="max-width: 70%;">
                                                                        <i class="fas fa-file me-2"></i>
                                                                        <a href="@filePath" target="_blank" title="@fileName">@fileName</a>
                                                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteAttachment('@attachment.Attachment.AttachmentId')">
                                                                            <i class="fas fa-trash-alt"></i> Xóa
                                                                        </button>
                                                                    </div>
                                                                    <span class="badge bg-secondary">@ext.ToUpper()</span>
                                                                </div>
                                                            </div>
                                                        }

                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    index++;
                                }
                            }
                        </div>
                        <a href="@Url.Action("DeleteAllAttachments", new { lopHocId = Model.LopHocId })"
                           class="btn btn-danger m-2"
                           onclick="return confirm('Bạn có chắc chắn muốn xóa tất cả tài liệu?');">
                            <i class="fa fa-trash"></i> Xóa tất cả tài liệu
                        </a>
                    }
                    else
                    {
                        <div class="alert alert-info">Không có tài liệu</div>
                    }

                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary me-2 btn-lg">
                        <i class="fa-solid fa-save"></i> Lưu Thay Đổi
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>
<style>
    .ck-editor__editable {
        min-height: 150px;
        max-height: 600px;
        resize: vertical; /* Cho phép kéo theo chiều dọc */
        overflow-y: auto;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        padding: 0.75rem;
        font-size: 1rem;
    }

    .btn-lg {
        padding: 0.5rem 1.5rem;
        font-size: 1.125rem;
    }

    .card-header {
        font-size: 1.5rem;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .row {
        margin-bottom: 1.5rem;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }
</style>
<!-- Tích hợp CKEditor 5 -->
<script>
    function deleteAttachment(attachmentId) {
        if (confirm('Bạn có chắc chắn muốn xóa tệp này?')) {
            window.location.href = '/Admin/LopHoc/DeleteAttachment?attachmentId=' + attachmentId + '&lopHocId=@Model.LopHocId';
        }
    }

        document.addEventListener('DOMContentLoaded', function () {
    ClassicEditor
        .create(document.querySelector('#MoTa'), {
            ckfinder: {
                uploadUrl: '@Url.Action("UploadImage", "LopHoc", new { area = "Admin" })',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            },
            toolbar: {
                items: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'imageUpload', 'blockQuote', 'undo', 'redo'
                ]
            },
            language: 'vi'
        })
        .then(editor => {
            window.editor = editor;
        })
        .catch(error => {
            console.error('CKEditor lỗi:', error);
        });
});
</script>

