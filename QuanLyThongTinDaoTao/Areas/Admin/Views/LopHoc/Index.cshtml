@model List<QuanLyThongTinDaoTao.Models.LopHoc>

@{
    ViewBag.Title = "Danh Sách Lớp Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container-xxl py-5">
    <div class="bg-light rounded p-4 shadow-sm">
        <div class="text-center wow fadeInUp mb-5" data-wow-delay="0.1s">
            <h3 class="mb-5">      <i class="fas fa-school"></i> DANH SÁCH LỚP HỌC</h3>
        </div>
        <div class="card-header text-white text-center d-flex flex-wrap align-items-center justify-content-center gap-2 mb-3 mt-4">
            <a href="@Url.Action("Create")" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Thêm lớp học
            </a>
            <input type="text" class="form-control w-50" id="searchInput" placeholder="Tìm kiếm theo mã, tên,.." />

            <button class="btn btn-danger d-none" id="btnXoaNhieu" onclick="xoaNhieu()">
                <i class="bi bi-trash3"></i> Xóa đã chọn
            </button>
        </div>
        <div class="card-header text-white text-center d-flex flex-wrap align-items-center justify-content-center gap-2 mb-3 mt-4">
            <!-- Dropdown chọn khóa học -->
            <select id="KhoaHocId" name="KhoaHocId" class="form-select w-100 mb-0">
                <option value="" class="text-center">-- Tất cả Khóa Học --</option>
                @foreach (var khoaHoc in ViewBag.KhoaHocList)
                {
                    <option value="@khoaHoc.KhoaHocId" class="text-center">@khoaHoc.TenKhoaHoc</option>
                }
            </select>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered align-middle" id="lopHocTable">

                <thead class="table-primary text-center">
                    <tr>
                        <th><input type="checkbox" id="checkAll" /></th>
                        <th data-sort="MaLopHoc" onclick="">Mã Lớp Học</th>
                        <th data-sort="TenLopHoc" onclick="">Tên Lớp Học</th>
                        <th data-sort="TenKhoaHoc" onclick="">Tên Khóa Học</th>
                        <th data-sort="SoTinChi" onclick="">Số Tín Chỉ</th>
                        <th data-sort="NgayBatDau" onclick="">Ngày Bắt Đầu</th>
                        <th data-sort="NgayKetThuc" onclick="">Ngày Kết Thúc</th>
                        <th>Trạng Thái</th>
                        <th>Hành Động</th>
                    </tr>
                </thead>

                <tbody id="tableBody">
                    @Html.Partial("_LopHocTablePartial", Model)
                </tbody>
            </table>
        </div>
        <!-- Pagination -->
        <nav>
            <ul class="pagination justify-content-center"></ul>
        </nav>
    </div>
</div>

<script>
    $(function () {
        // Xử lý khi chọn khóa học trong dropdown
        $('#KhoaHocId').change(function () {
            var khoaHocId = $(this).val() || null;

            $.ajax({
                url: '@Url.Action("FilterByKhoaHoc", "LopHoc")',
                type: 'GET',
                data: { khoaHocId: khoaHocId },
                success: function (data) {
                    if (data.error) {
                        $('#tableBody').html('<tr><td colspan="9" class="text-center text-danger"><strong>' + data.error + '</strong></td></tr>');
                    } else {
                        $('#tableBody').html(data);
                    }
                },
                error: function (xhr) {
                    console.error("Lỗi khi tải dữ liệu: " + xhr.responseText);
                }
            });
        });

        // Hàm cập nhật trạng thái lớp học (badge)
        function capNhatTrangThaiLopHoc() {
            $.ajax({
                url: '@Url.Action("GetTrangThaiLopHoc", "LopHoc")',
                method: 'GET',
                success: function (data) {
                    data.forEach(function (lop) {
                        var row = $('#row-' + lop.LopHocId);
                        var badge = '<span class="badge ' + lop.BadgeClass + '">' + lop.TrangThai + '</span>';
                        row.find('.trang-thai').html(badge);
                    });
                },
                error: function () {
                    console.error("Lỗi khi cập nhật trạng thái lớp học.");
                }
            });
        }

        // Gọi cập nhật trạng thái khi trang load và mỗi 30s
        capNhatTrangThaiLopHoc();
        setInterval(capNhatTrangThaiLopHoc, 30000);
    });
    $(function () {
        // Xử lý tìm kiếm realtime
        $('#searchInput').on('input', function () {
            var keyword = $(this).val().toLowerCase(); // Lấy giá trị từ ô tìm kiếm và chuyển thành chữ thường

            // Lọc từng hàng trong bảng
            $('#tableBody tr').filter(function () {
                // Kiểm tra xem từ khóa có xuất hiện trong bất kỳ nội dung nào của dòng không
                $(this).toggle($(this).text().toLowerCase().indexOf(keyword) > -1);
            });
        });
    });
    // phân trang

    const rowsPerPage = 4; // Số dòng mỗi trang
    let currentPage = 1;

    function renderPagination() {
        const rows = $('#lopHocTable tbody tr');
        const totalRows = rows.length;
        const totalPages = Math.ceil(totalRows / rowsPerPage);

        rows.hide();

        const startIndex = (currentPage - 1) * rowsPerPage;
        const endIndex = startIndex + rowsPerPage;
        rows.slice(startIndex, endIndex).show();

        // Render pagination
        let paginationHtml = '';

        paginationHtml += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="changePage(1)">Trang đầu</a></li>`;

        paginationHtml += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Trước</a></li>`;

        for (let i = 1; i <= totalPages; i++) {
            paginationHtml += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                <a class="page-link" href="#" onclick="changePage(${i})">${i}</a></li>`;
        }

        paginationHtml += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Sau</a></li>`;

        paginationHtml += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="changePage(${totalPages})">Trang cuối</a></li>`;

        $('.pagination').html(paginationHtml);
    }

    function changePage(page) {
        currentPage = page;
        renderPagination();
    }

    $(function () {
        renderPagination(); // Gọi lần đầu khi trang load
    });
   
</script>
