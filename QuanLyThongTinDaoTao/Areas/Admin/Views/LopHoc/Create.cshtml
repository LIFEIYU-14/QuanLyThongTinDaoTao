@model QuanLyThongTinDaoTao.Models.LopHoc

@{
    ViewBag.Title = "Thêm Lớp Học";
    Layout = "~/Areas/Admin/Views/Shared/_MainAdminLayout.cshtml";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h3> <i class="fas fa-plus-circle"></i>Thêm Lớp Học</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Create", "LopHoc", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <!-- Mã Lớp Học (readonly) -->
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.MaLopHoc, "Mã Lớp Học", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.MaLopHoc, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MaLopHoc, "", new { @class = "text-danger" })
                </div>
                if (Model.KhoaHocId != Guid.Empty)
                {
                    @Html.HiddenFor(model => model.KhoaHocId)

                    <div class="col-md-12 mb-3">
                        <label class="form-label">Khóa Học</label>
                        <input type="text" class="form-control" value="@ViewBag.TenKhoaHoc" readonly />
                    </div>
                }
                else
                {
                    <!-- Chọn thủ công từ dropdown -->
                    <div class="col-md-12 mb-3">
                        @Html.Label("KhoaHocId", "Khóa Học", new { @class = "form-label" })
                        <select class="form-control" name="KhoaHocId" required>
                            <option value="">-- Chọn Khóa Học --</option>
                            @foreach (var khoaHoc in ViewBag.KhoaHocList)
                            {
                                <option value="@khoaHoc.KhoaHocId">@khoaHoc.TenKhoaHoc</option>
                            }
                        </select>
                    </div>
                }

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.TenLopHoc, "Tên Lớp Học", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.TenLopHoc, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.TenLopHoc, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.SoTinChi, "Số Tín Chỉ", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.SoTinChi, new { @class = "form-control", type = "number", min = 1, required = "required" })
                        @Html.ValidationMessageFor(model => model.SoTinChi, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.NgayBatDau, "Ngày Bắt Đầu", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.NgayBatDau, new { @class = "form-control", type = "date", required = "required" })
                        @Html.ValidationMessageFor(model => model.NgayBatDau, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.NgayKetThuc, "Ngày Kết Thúc", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.NgayKetThuc, new { @class = "form-control", type = "date", required = "required" })
                        @Html.ValidationMessageFor(model => model.NgayKetThuc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.SoLuongToiDa, "Số Lượng Tối Đa", new { @class = "form-label" })
                        <span class="text-danger">*</span>
                        @Html.TextBoxFor(model => model.SoLuongToiDa, new { @class = "form-control", type = "number", min = 1, required = "required" })
                        @Html.ValidationMessageFor(model => model.SoLuongToiDa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Phần nhập mô tả tích hợp CKEditor -->
                <div class="mb-3">
                    @Html.LabelFor(model => model.MoTa, "Mô Tả", new { @class = "form-label" })
                    <span class="text-danger">*</span>
                    @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = 5, id = "MoTa" })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>


                <div class="mb-3">
                    <label for="attachments" class="form-label">Tệp Đính Kèm (JPG, PNG, PDF, DOCX)</label>
                    <input type="file" name="attachments" id="attachments" class="form-control" multiple />
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-success me-2 btn-lg">
                        <i class="fa-solid fa-circle-plus"></i> Thêm Lớp Học
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại
                    </a>
                </div>
            }
        </div>
    </div>
</div>
<style>
    .ck-editor__editable {
        min-height: 150px;
        max-height: 600px;
        resize: vertical; /* Cho phép kéo theo chiều dọc */
        overflow-y: auto;
    }
    .form-label {
        font-weight: bold;
    }

    .form-control {
        padding: 0.75rem;
        font-size: 1rem;
    }

    .btn-lg {
        padding: 0.5rem 1.5rem;
        font-size: 1.125rem;
    }

    .card-header {
        font-size: 1.5rem;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .row {
        margin-bottom: 1.5rem;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }
</style>

<!-- Tích hợp CKEditor 5 -->
<script>
        document.addEventListener('DOMContentLoaded', function () {
    ClassicEditor
        .create(document.querySelector('#MoTa'), {
            ckfinder: {
                uploadUrl: '@Url.Action("UploadImage", "LopHoc", new { area = "Admin" })',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            },
            toolbar: {
                items: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'imageUpload', 'blockQuote', 'undo', 'redo'
                ]
            },
            language: 'vi'
        })
        .then(editor => {
            window.editor = editor;
        })
        .catch(error => {
            console.error('CKEditor lỗi:', error);
        });
});

</script>
